generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id                       String    @id @default(uuid())
  name                     String?
  email                    String    @unique
  hashedPassword           String?
  emailVerified            DateTime?
  image                    String?
  createdAt                DateTime  @default(now())
  updatedAt                DateTime  @updatedAt
  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")
  accounts                 Account[]
  sessions                 Session[]
}

model Job {
  id            Int      @id @default(autoincrement())
  userId        String
  title         String
  description   String
  companyName   String
  location      String
  country       String
  city          String
  employmentType String
  opinion       String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  skills        Skill[]
}

model Skill {
  id    Int     @id @default(autoincrement())
  text  String
  jobId Int 
  job   Job     @relation(fields: [jobId], references: [id])

  @@index([jobId])
}

